快过年啦！有人写年终总结吗？把链接发给我看看吧，互相学习~
article
[原创] 每周 Swift 社区问答 2016-01-20 (@shanks)||http://swift.gg/2016/01/20/swift-qa-2016-01-20/||翻译组的原创文章，每周整理 Stack Overflow 和 Swift 官方论坛中的提问及回答，推荐阅读。
[译] iOS：如何用 Swift 实现弱代理 (@lfb_CD)||http://swift.gg/2016/01/19/ios-weak-delegates-swift/||weak 关键字可以避免内存泄露，但是如何在协议上使用 weak？来学习一个实用的小技巧。
[译] 如何简单地模拟 NSURLSession 的返回数据 (@小袋子)||http://swift.gg/2016/01/22/an-easy-way-to-stub-nsurlsession/||在开发过程中经常要等后端开发接口，这非常低效。本文介绍了如何模拟 NSURLSession 返回数据，从而可以和后端并行开发，提高效率。
[译] 在 Swift 中编写 watchOS 2 Hello World 程序 (@mmoaay)||http://swift.gg/2016/01/21/watchos-2-hello-world-app-in-swift/||又一位大神开坑介绍 watchOS 开发，第一篇照例是 Hello World。我们会继续跟进翻译。
细说GCD（Grand Central Dispatch）如何用 (@戴铭)||http://www.jianshu.com/p/fbe6a654604c||GCD 和 JSON 一样，永远有新教程出现。我的建议：认真吃透一篇文章，真正掌握这门技术。
Profiling your Swift compilation times (@Bryan Irace)||http://irace.me/swift-profiling/||很多人都在吐槽 Swift 的编译速度，如何解决问题？本文教你如何在 Xcode 中查看不同文件的编译耗时，找到项目的编译瓶颈。||
apple
CoreDragon：跨应用拖拽库 (@nevyn)||https://github.com/nevyn/CoreDragon||常用的数据传递方式是“间接操作”，比如 context menus、modal view controller 和 share sheet，为什么不直接拖拽呢？CoreDragon 支持应用内和（iPad 上分屏使用的）应用间拖拽，更加直观。
Zip：压缩/解压框架 (@marmelroy)||https://github.com/marmelroy/Zip||基于 minizip 开发的压缩/解压框架，或许可以用来减少应用大小。
FolioReaderKit：ePub 阅读器 (@FolioReader)||https://github.com/FolioReader/FolioReaderKit||电子书领域博大精深，如果产品和电子书相关，可以研究一下这个项目。||
linux
使用 Ncurses 开发文字界面 (@Joe)||http://dev.iachieved.it/iachievedit/ncurses-with-swift-on-linux/||使用 Swift 在 Linux 上开发文字界面，或许不久之后我们就能玩 mud 游戏了！Swift 正在重新进化，从命令行到文字界面，从文字界面到图形界面，有趣！
5110LCD_PCD8544.swift (@uraimo)||https://github.com/uraimo/5110LCD_PCD8544.swift||使用 Swift 来控制 LCD，回忆起了被数字电路支配的恐惧。||